# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
param (
    [string]$url = "http://localhost:8080",
    [string]$username,
    [string]$password
)

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã
if (-not $username) {
    $username = Read-Host "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (email)"
}

if (-not $password) {
    $securePassword = Read-Host "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" -AsSecureString
    $BSTR = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($securePassword)
    $password = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($BSTR)
}

# –§–æ—Ä–º–∏—Ä—É–µ–º JSON –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
$body = @{
    email = $username
    password = $password
} | ConvertTo-Json

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
try {
    Write-Host "–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ $url/api/auth/login" -ForegroundColor Cyan
    $response = Invoke-RestMethod -Method Post -Uri "$url/api/auth/login" -Body $body -ContentType "application/json" -ErrorAction Stop
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω
    $token = $response.token
    
    if ($token) {
        Write-Host "‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω:" -ForegroundColor Green
        Write-Host $token
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        if (Get-Command "Set-Clipboard" -ErrorAction SilentlyContinue) {
            $token | Set-Clipboard
            Write-Host "üìã –¢–æ–∫–µ–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞" -ForegroundColor Green
        }
        
        # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤
        Write-Host ""
        Write-Host "üöÄ –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º:" -ForegroundColor Yellow
        Write-Host ".\bin\bottest.exe run --token=$token --quiz=1 --bots=3" -ForegroundColor Yellow
    } else {
        Write-Host "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $_" -ForegroundColor Red
    Write-Host "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $($_.Exception.Response)" -ForegroundColor Red
} 